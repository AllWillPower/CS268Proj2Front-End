{"version":3,"sources":["actions.js","torrent.js","header.js","labels.js","searchbar.js","torrentadder.js","App.js","reducer.js","store.js","index.js"],"names":["Action","Object","freeze","LoadTorrents","FinishAddingTorrent","UpdateTorrent","EnterEditMode","LeaveEditMode","FinishDeletingTorrent","StartWaiting","startWaiting","torrents","type","loadTorrents","payload","updateTorrent","torrent","checkForErrors","response","ok","Error","concat","status","statusText","host","loadAllTorrents","dispatch","fetch","then","json","data","catch","e","console","error","startAddingTorrent","name","author","filesize","filename","distributor","description","distributionWebsite","distribution","distributionName","options","method","headers","Content-Type","body","JSON","stringify","updateLeechers","torrentID","i","updateSeeders","startDeletingTorrent","_id","finishDeletingTorrent","Torrent","props","useDispatch","incLeechers","decLeechers","incSeeders","decSeeders","_useState","useState","_useState2","slicedToArray","setName","_useState3","_useState4","setDescription","isEditing","react_default","a","createElement","className","value","onChange","target","placeholder","onClick","startSavingTorrent","leaveEditMode","leechers","seeders","href","rel","download","dateCreated","substring","src","alt","enterEditMode","Header","Labels","SearchBar","setValue","setType","event","input","searchBy","TorrentAdder","setAuthor","_useState5","_useState6","setFilesize","_useState7","_useState8","file","setFile","_useState9","_useState10","setDistributor","_useState11","_useState12","id","files","match","FormData","append","axios","post","res","alert","App","useSelector","state","isWaiting","useEffect","map","key","initialState","reducer","arguments","length","undefined","action","objectSpread","toConsumableArray","filter","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","es","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.dcf56411.chunk.js","sourcesContent":["\r\n\r\nexport const Action = Object.freeze({\r\n    LoadTorrents: 'LoadTorrents',\r\n    FinishAddingTorrent: 'FinishAddingTorrent',\r\n    UpdateTorrent: 'UpdateTorrent',\r\n    EnterEditMode: 'EnterEditMode',\r\n    LeaveEditMode: 'LeaveEditMode',\r\n    FinishDeletingTorrent: 'FinishDeletingTorrent',\r\n    StartWaiting: 'StartWaiting'\r\n});\r\n\r\nexport function startWaiting(torrents){\r\n    return {\r\n        type: Action.StartWaiting,\r\n    };\r\n}\r\n\r\nexport function loadTorrents(torrents){\r\n    return {\r\n        type: Action.LoadTorrents,\r\n        payload: torrents,\r\n    };\r\n}\r\n\r\nexport function finishAddingTorrent(torrent){\r\n    // console.log(\"Loading torrents\");\r\n    return {\r\n        type: Action.FinishAddingTorrent,\r\n        payload: torrent,\r\n    };\r\n}\r\n\r\n\r\nexport function updateTorrent(torrent){\r\n    // console.log(\"Loading torrents\");\r\n    return {\r\n        type: Action.UpdateTorrent,\r\n        payload: torrent,\r\n    };\r\n}\r\n\r\nexport function enterEditMode(torrent){\r\n    return {\r\n        type: Action.EnterEditMode,\r\n        payload: torrent,\r\n    };\r\n}\r\n\r\nexport function leaveEditMode(torrent){\r\n    return {\r\n        type: Action.LeaveEditMode,\r\n        payload: torrent,\r\n    };\r\n}\r\n\r\nexport function finishDeletingTorrent(torrent){\r\n    return {\r\n        type: Action.FinishDeletingTorrent,\r\n        payload: torrent,\r\n    };\r\n}\r\n\r\nfunction checkForErrors(response){\r\n    if(!response.ok){\r\n        throw Error(`${response.status}: ${response.statusText}`);\r\n\r\n    }\r\n    return response;\r\n}\r\n\r\n// const host = 'http://sellej.duckdns.org:3000';\r\n//const host = 'http://157.245.142.207:3000';\r\nconst host = 'https://torrentapi.duckdns.org:8442';\r\n\r\n\r\nexport function loadAllTorrents(){\r\n    return dispatch => {\r\n        dispatch(startWaiting());\r\n        fetch(`${host}/api/torrents`)\r\n        .then(checkForErrors)\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            // if(data.ok){\r\n                dispatch(loadTorrents(data));\r\n                //console.log(data);\r\n           // }\r\n        })\r\n        // .then(function(){console.log('Request succeeded')})\r\n        .catch(e => console.error(e));\r\n    };\r\n}\r\n\r\nexport function searchBy(type, input){\r\n    return dispatch => {\r\n\r\n        if(input === \"\"){\r\n            dispatch(loadAllTorrents());\r\n        }\r\n        else{\r\n            dispatch(startWaiting());\r\n            fetch(`${host}/api/torrents/${type}/${input}`)\r\n            .then(checkForErrors)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n            // if(data.ok){\r\n                dispatch(loadTorrents(data));\r\n           // }\r\n            })\r\n        // .then(function(){console.log('Request succeeded')})\r\n        .catch(e => console.error(e));\r\n        }\r\n\r\n        \r\n    };\r\n}\r\n\r\nexport function startAddingTorrent(name, author, filesize, filename, distributor, description){\r\n    let distributionWebsite = '';\r\n    if(distributor === 'Ubuntu'){\r\n        distributionWebsite = 'https://ubuntu.com/';\r\n    }\r\n    else if(distributor === 'CentOS'){\r\n        distributionWebsite = 'https://www.centos.org/';\r\n    }\r\n    else if(distributor === 'Get Fedora'){\r\n        distributionWebsite = 'https://getfedora.org/';\r\n    }\r\n    else if(distributor === 'Debian'){\r\n        distributionWebsite = 'https://www.debian.org/';\r\n    }\r\n    else if(distributor === 'Linux Mint'){\r\n        distributionWebsite = 'https://www.linuxmint.com/';\r\n    }\r\n    else if(distributor === 'Manjaro'){\r\n        distributionWebsite = 'https://manjaro.org/';\r\n    }\r\n    const torrent = {name: name, author: author, filesize: filesize, filename: filename, distribution:{distributionName: distributor, distributionWebsite: distributionWebsite}, description: description};\r\n    const options = {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(torrent),\r\n    }\r\n    return dispatch => {\r\n        dispatch(startWaiting());\r\n        fetch(`${host}/api/torrents`, options)\r\n        .then(checkForErrors)\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            // if(data.ok){\r\n                dispatch(finishAddingTorrent(data));\r\n           // }\r\n        })\r\n        // .then(function(){console.log('Request succeeded')})\r\n        .catch(e => console.error(e));\r\n    };\r\n}\r\n\r\nexport function updateLeechers(torrentID, i){\r\n\r\n    const options = {\r\n        method: 'PATCH',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({}),\r\n    }\r\n    if(i === 1){\r\n        //console.log(torrentID);\r\n        return dispatch => {\r\n        dispatch(startWaiting());\r\n        fetch(`${host}/api/torrents/${torrentID}/leech`, options)\r\n        .then(checkForErrors)\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            // if(data.ok){\r\n                // torrent.id = data.id;\r\n                // dispatch(finishAddingTorrent(torrent))\r\n                //console.log(data);\r\n                dispatch(updateTorrent(data));\r\n           // }\r\n        })\r\n        .catch(e => console.error(e));\r\n        }\r\n    }\r\n    else{\r\n        return dispatch => {\r\n            dispatch(startWaiting());\r\n            fetch(`${host}/api/torrents/${torrentID}/unleech`, options)\r\n            .then(checkForErrors)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                // if(data.ok){\r\n                    // torrent.id = data.id;\r\n                    // dispatch(finishAddingTorrent(torrent))\r\n                    //console.log(data);\r\n                    dispatch(updateTorrent(data));\r\n               // }\r\n            })\r\n            .catch(e => console.error(e));\r\n        }\r\n    }\r\n}\r\n\r\nexport function updateSeeders(torrentID, i){\r\n\r\n    const options = {\r\n        method: 'PATCH',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({}),\r\n    }\r\n\r\n    if(i === 1){\r\n        return dispatch => {\r\n            dispatch(startWaiting());\r\n            fetch(`${host}/api/torrents/${torrentID}/seed`, options)\r\n            .then(checkForErrors)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                // if(data.ok){\r\n                    // torrent.id = data.id;\r\n                    // dispatch(finishAddingTorrent(torrent))\r\n                    //console.log(data);\r\n                    dispatch(updateTorrent(data));\r\n               // }\r\n            })\r\n            .catch(e => console.error(e));\r\n        }\r\n    }\r\n    else{\r\n        return dispatch => {\r\n            dispatch(startWaiting());\r\n            fetch(`${host}/api/torrents/${torrentID}/unseed`, options)\r\n            .then(checkForErrors)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                // if(data.ok){\r\n                    // torrent.id = data.id;\r\n                    // dispatch(finishAddingTorrent(torrent))\r\n                    //console.log(data);\r\n                    dispatch(updateTorrent(data));\r\n               // }\r\n            })\r\n            .catch(e => console.error(e));\r\n        }\r\n    }\r\n}\r\n\r\nexport function startSavingTorrent(name, description, torrentID){\r\n    \r\n    const options = {\r\n        method: 'PATCH',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({name: name, description: description}),\r\n    }\r\n    return dispatch => {\r\n        dispatch(startWaiting());\r\n        fetch(`${host}/api/torrents/${torrentID}`, options)\r\n        .then(checkForErrors)\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            // if(data.ok){\r\n                // console.log(data);\r\n                dispatch(updateTorrent(data));\r\n                \r\n                //console.log(data);\r\n           // }\r\n        })\r\n        // .then(function(){console.log('Request succeeded')})\r\n        .catch(e => console.error(e));\r\n    };\r\n}\r\n\r\n\r\nexport function startDeletingTorrent(torrent){\r\n    const options = {\r\n        method: 'DELETE',\r\n    };\r\n    return dispatch => {\r\n        dispatch(startWaiting());\r\n        fetch(`${host}/api/torrentfiles/${torrent.filename}`, options)\r\n        .then(checkForErrors)\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            // if(data.ok){\r\n           // }\r\n        })\r\n        .catch(e => console.error(e));\r\n\r\n\r\n\r\n\r\n        fetch(`${host}/api/torrents/${torrent._id}`, options)\r\n        .then(checkForErrors)\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            // if(data.ok){\r\n                dispatch(finishDeletingTorrent(torrent));\r\n           // }\r\n        })\r\n        .catch(e => console.error(e));\r\n    };\r\n}","import React, {useState} from 'react';\r\nimport {useDispatch} from 'react-redux';\r\nimport {updateLeechers, updateSeeders, enterEditMode, leaveEditMode, startSavingTorrent, startDeletingTorrent} from './actions';\r\n\r\nexport function Torrent(props) {\r\n    const torrent = props.torrent;\r\n    const dispatch = useDispatch();\r\n    const incLeechers = () => {\r\n        dispatch(updateLeechers(torrent._id, 1));\r\n    }\r\n    const decLeechers = () => {\r\n        dispatch(updateLeechers(torrent._id, -1));\r\n    }\r\n    const incSeeders = () => {\r\n        dispatch(updateSeeders(torrent._id, 1));\r\n    }\r\n    const decSeeders = () => {\r\n        dispatch(updateSeeders(torrent._id, -1));\r\n    }\r\n\r\n    const onEdit = () => {\r\n        dispatch(enterEditMode(torrent));\r\n    }\r\n\r\n    const onCancel = () => {\r\n        dispatch(leaveEditMode(torrent));\r\n    }\r\n\r\n    const [name, setName] = useState(torrent.name);\r\n    const [description, setDescription] = useState(torrent.description);\r\n\r\n    const onSave = () => {\r\n        dispatch(startSavingTorrent(name, description, torrent._id));\r\n    }\r\n\r\n    const onDelete = () => {\r\n        dispatch(startDeletingTorrent(torrent));\r\n    }\r\n\r\n    const host = 'https://torrentapi.duckdns.org:8442';\r\n\r\n    if(torrent.isEditing){\r\n        return (\r\n            <tr className=\"torrent\">\r\n            <td className=\"torrent-left\">\r\n                <input type=\"text\" value={name} onChange={e => setName(e.target.value)} placeholder=\"Change Torrent name\"></input>\r\n                <button onClick={onSave}>Save</button>\r\n                <button onClick={onCancel}>Cancel</button>\r\n                <button onClick={onDelete} className=\"delete-button\">Delete</button>\r\n            </td>\r\n            <td>\r\n                <span className=\"size\">{torrent.filesize} Mb</span>\r\n            </td>\r\n            <td>\r\n                <div className=\"leechers-full\">\r\n                    <div className=\"increments\">\r\n                        <button onClick={incLeechers}>+</button>\r\n                        <button onClick={decLeechers}>-</button>\r\n                    </div>\r\n                    <span className=\"leechers\">{torrent.leechers}</span>\r\n                </div>\r\n            </td>\r\n            <td>\r\n                <div className=\"seeders-full\">\r\n                    <div className=\"increments\">\r\n                        <button onClick={incSeeders}>+</button>\r\n                        <button onClick={decSeeders}>-</button>\r\n                    </div>\r\n                    <span className=\"seeders\">{torrent.seeders}</span>\r\n                </div>\r\n            </td>\r\n            <td>\r\n                <a href = {`${torrent.distribution.distributionWebsite}`} target=\"_blank\" rel=\"noopener noreferrer\">{torrent.distribution.distributionName}</a>\r\n            </td>\r\n            <td>\r\n                <a href= {`${host}/api/torrentfiles/${torrent.filename}`} download>{torrent.name}.iso</a>\r\n            </td>\r\n            <td>\r\n                <div className=\"authorDatePair\">\r\n                    <span className=\"uploaderName\">{torrent.author}</span>\r\n                    <span className=\"datePosted\">{torrent.dateCreated.substring(0, 10)}</span>\r\n                </div>\r\n            </td>\r\n            <td className=\"torrent-right\">\r\n                <div className=\"descriptionInput\">\r\n                    <label>Change Description:</label>\r\n                    <textarea value={description} onChange={e => setDescription(e.target.value)}/>\r\n                </div>\r\n                {/* <input type=\"text\" placeholder=\"Enter new Torrent name\"></input> */}\r\n            </td>\r\n        </tr>\r\n        );\r\n    }\r\n    else{\r\n        return(\r\n            <tr className=\"torrent\">\r\n                <td className=\"torrent-left\">\r\n                    <div className=\"nameButtonGroup\">\r\n                        <span className=\"name\">{torrent.name}</span>\r\n                        <img className = \"logo\" src = {`${torrent.distribution.distributionName}.png`} alt= {torrent.distribution.distributionName}></img>\r\n                        <button onClick={onEdit}>Edit Torrent</button>\r\n                    </div>\r\n                </td>\r\n                <td>\r\n                    <span className=\"size\">{torrent.filesize} Mb</span>\r\n                </td>\r\n                <td>\r\n                    <div className=\"leechers-full\">\r\n                        <div className=\"increments\">\r\n                            <button onClick={incLeechers}>+</button>\r\n                            <button onClick={decLeechers}>-</button>\r\n                        </div>\r\n                        <span className=\"leechers\">{torrent.leechers}</span>\r\n                    </div>\r\n                </td>\r\n                <td>\r\n                    <div className=\"seeders-full\">\r\n                        <div className=\"increments\">\r\n                            <button onClick={incSeeders}>+</button>\r\n                            <button onClick={decSeeders}>-</button>\r\n                        </div>\r\n                        <span className=\"seeders\">{torrent.seeders}</span>\r\n                    </div>\r\n                </td>\r\n                <td>\r\n                <a href = {`${torrent.distribution.distributionWebsite}`} target=\"_blank\" rel=\"noopener noreferrer\">{torrent.distribution.distributionName}</a>\r\n                </td>\r\n                <td>\r\n                    <a href= {`${host}/api/torrentfiles/${torrent.filename}`} download>{torrent.name}.iso</a>\r\n                </td>\r\n                <td>\r\n                    <div className=\"authorDatePair\">\r\n                        <span className=\"uploaderName\">{torrent.author}</span>\r\n                        <span className=\"datePosted\">{torrent.dateCreated.substring(0, 10)}</span>\r\n                    </div>\r\n                </td>\r\n                <td className=\"torrent-right\">\r\n                    <span className=\"description\">{torrent.description}</span>\r\n    \r\n                </td>\r\n            </tr>\r\n        );\r\n    }\r\n}","import React from 'react';\r\n\r\nexport function Header() {\r\n    return(\r\n        <div className=\"header\">\r\n            Quick and Easy Torrent Downloads\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\n\r\nexport function Labels() {\r\n    return(\r\n        // <div className=\"labels\">\r\n        //     <div className=\"labels-left\">\r\n        //         <span className=\"nameLabel\">Torrent Name</span>\r\n        //     </div>\r\n        //     <div className=\"labels-right\">\r\n        //         <span className=\"sizeLabel\">File Size</span>\r\n        //         <span className=\"leechersLabel\">Leechers</span>\r\n        //         <span className=\"seedersLabel\">Seeders</span>\r\n        //         <span className=\"distributorLabel\">Distribution</span>\r\n\r\n        //         <span className=\"linkLabel\">Download Link </span>\r\n        //         <span className=\"uploaderNameLabel\">Author</span>\r\n        //         <span className=\"datePostedLabel\">Date Posted</span>\r\n                \r\n        //     </div>\r\n        // </div>\r\n        <tr>\r\n            <th>\r\n                Torrent Name\r\n            </th>\r\n            <th>\r\n                File Size\r\n            </th>\r\n            <th>\r\n                Leechers\r\n            </th>\r\n            <th>\r\n                Seeders\r\n            </th>\r\n            <th>\r\n                Distribution\r\n            </th>\r\n            <th>\r\n                Download Link\r\n            </th>\r\n            <th>\r\n                Author/Date Posted\r\n            </th>\r\n            <th>\r\n                Description\r\n            </th>\r\n        </tr>\r\n    );\r\n}","import React, {useState} from 'react';\r\nimport {useDispatch} from 'react-redux';\r\nimport {searchBy} from './actions';\r\n\r\nexport function SearchBar() {\r\n\r\n    // let input = useSelector(state => state.input);\r\n    // let type = useSelector(state => state.input);\r\n    const dispatch = useDispatch();\r\n    \r\n    //let value = '';\r\n    //let type = 'name';\r\n\r\n    const [value, setValue] = useState('');\r\n    const [type, setType] = useState('name');\r\n    const search = () => {\r\n        dispatch(searchBy(type, value));\r\n        //alert('A value was submitted: ' + value);\r\n    }\r\n\r\n    \r\n    const handleChange = (event) => {\r\n        setValue(event.target.value);\r\n        // dispatch(searchBy(type, value));\r\n        //value = event.target.value;\r\n    }\r\n    \r\n    const handleChange2 = (event) => {\r\n        setType(event.target.value);\r\n        //type = event.target.value;\r\n    }\r\n    \r\n    \r\n\r\n\r\n    return(\r\n        <div className=\"searchBar\">\r\n            <span className=\"searchBarLabel\">Search By: </span>\r\n            <select className=\"searchBy\" onChange={handleChange2}>\r\n                <option value=\"name\">Torrent Name</option>\r\n                <option value=\"author\">Torrent Author</option>\r\n                <option value=\"distribution\">Distribution</option>\r\n            </select>\r\n            <input className=\"searchInput\" type=\"text\" onChange={handleChange} placeholder=\"Search Torrents...\"></input>\r\n            <button onClick={search}>Search</button>\r\n        </div>\r\n    );\r\n}","import React, {useState} from 'react';\r\nimport {useDispatch} from 'react-redux'\r\nimport {startAddingTorrent} from './actions';\r\nimport axios from 'axios';\r\n\r\nexport function TorrentAdder() {\r\n    const dispatch = useDispatch();\r\n    const host = 'https://torrentapi.duckdns.org:8442';\r\n    //const [torrentfileName, setTorrentFileName] = useState('');\r\n    const onAdd = () => {\r\n        if(filesize.match(/^\\d+$/)){\r\n            const data = new FormData();\r\n            data.append('torrentFile', file);\r\n            axios.post(`${host}/api/torrentfiles/upload`, data, {})\r\n            .then(res => {\r\n                // console.log(res);\r\n                if(!res.data.error)\r\n                {\r\n                    //console.log(res.data.filename);\r\n                    // setTorrentFileName(res.data.filename);\r\n                    // console.log(torrentfileName);\r\n                    dispatch(startAddingTorrent(name, author, filesize, res.data.filename, distributor, description));\r\n                    //startAddingTorrent w/ torrentFile's link\r\n                }\r\n                else{\r\n                    alert(\"Must use a file with .torrent that has not been entered yet.\");\r\n                }\r\n            })\r\n        }\r\n        else{\r\n            alert(\"File size must contain only numbers\");\r\n        }\r\n        \r\n    }\r\n\r\n\r\n    const [name, setName] = useState('');\r\n    const [author, setAuthor] = useState('');\r\n    const [filesize, setFilesize] = useState('');\r\n    const [file, setFile] = useState(null);\r\n    \r\n    const [distributor, setDistributor] = useState('Ubuntu');\r\n    const [description, setDescription] = useState('');\r\n\r\n\r\n    const handleNameChange = (event) => {\r\n        setName(event.target.value);\r\n    }\r\n    const handleAuthorChange = (event) => {\r\n        setAuthor(event.target.value);\r\n    }\r\n    const handleFilesizeChange = (event) => {\r\n        setFilesize(event.target.value);\r\n    }\r\n    const handleFileChange = (event) => {\r\n        setFile(event.target.files[0]);\r\n    }\r\n    const handleDistributorChange = (event) => {\r\n        setDistributor(event.target.value);\r\n    }\r\n    const handleDescriptionChange = (event) => {\r\n        setDescription(event.target.value);\r\n    }\r\n\r\n    return(\r\n        <div className=\"torrentAdder\">\r\n            <h3>Add a New Torrent</h3>\r\n            <div className=\"torrentAdder-left\">\r\n                <input className=\"torrentNameInput\" type=\"text\" onChange={handleNameChange} placeholder=\"Insert Torrent Name\"></input>\r\n                <input className=\"torrentAuthorInput\" type=\"text\" onChange={handleAuthorChange} placeholder=\"Insert Torrent's Author\"></input>\r\n                <input className=\"fileSizeInput\" type=\"text\" onChange={handleFilesizeChange} placeholder=\"Insert the File Size (in MB)\"></input>\r\n            </div>\r\n            <div className=\"torrentAdder-right\">\r\n                <label>Add a Torrent File</label>\r\n                <input id=\"inputFile\" type=\"file\" name=\"file\" onChange={handleFileChange}></input>\r\n                <select className=\"distributionSelector\" onChange={handleDistributorChange}>\r\n                    <option value=\"Ubuntu\">Ubuntu</option>\r\n                    <option value=\"CentOS\">CentOS</option>\r\n                    <option value=\"Get Fedora\">Get Fedora</option>\r\n                    <option value=\"Debian\">Debian</option>\r\n                    <option value=\"Linux Mint\">Linux Mint</option>\r\n                    <option value=\"Manjaro\">Manjaro</option>\r\n                </select>\r\n                <input className=\"torrentDescInput\" onChange={handleDescriptionChange} placeholder=\"Enter Torrent Description\"></input>\r\n            </div>\r\n            <div className=\"torrentAdder-bottom\">\r\n                \r\n                <button onClick={onAdd}>Publish Torrent</button>\r\n                <button>Cancel</button>\r\n            </div>\r\n            \r\n            \r\n        </div>\r\n    );\r\n}","import React, {useEffect} from 'react';\nimport './App.css';\n\nimport {Torrent} from './torrent';\nimport {Header} from './header';\nimport {Labels} from './labels';\nimport {SearchBar} from './searchbar';\nimport {TorrentAdder} from './torrentadder';\nimport {useSelector, useDispatch} from 'react-redux';\nimport {loadAllTorrents} from './actions';\n\nfunction App() {\n\n  const torrents = useSelector(state => state.torrents);\n  const dispatch = useDispatch();\n\n  const isWaiting = useSelector(state => state.isWaiting);\n\n  useEffect(() => {\n    // dispatch(loadTorrents([\n    //   {id: 1, name: \"test-torrent\", logoSource: \"logo512.png\", distributor: \"Google\", size: 10, downloadLink: \"testing.txt\", leechers: \"4\", seeders: \"8\", uploaderName: \"Tester\", datePosted: \"Now\"},\n    //   {id: 2, name: \"test-torrent\", logoSource: \"logo512.png\", distributor: \"Google\", size: 10, downloadLink: \"testing.txt\", leechers: \"4\", seeders: \"8\", uploaderName: \"Tester\", datePosted: \"Now\"}\n    // ]));\n    dispatch(loadAllTorrents());\n  }, [dispatch]);\n  \n  return (\n    \n    <div id=\"torrents-root\">\n      <Header />\n      <SearchBar />\n      <TorrentAdder />\n      {isWaiting && <div className=\"spinner\" />}      \n      <table>\n        <tbody>\n          <Labels />\n          {torrents.map(torrent => <Torrent key ={torrent._id} torrent={torrent} />)}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default App;\n","import {Action} from \"./actions\";\r\n\r\nconst initialState = {\r\n    isWaiting: false,\r\n    torrents: [],\r\n};\r\n\r\nfunction reducer(state = initialState, action){\r\n    switch(action.type) {\r\n        case Action.LoadTorrents:\r\n            return {\r\n                ...state,\r\n                isWaiting: false,\r\n                torrents: action.payload,\r\n            };\r\n        case Action.FinishAddingTorrent:\r\n            action.payload.key = action.payload._id;\r\n            return {\r\n                ...state,\r\n                isWaiting: false,\r\n                \r\n                torrents: [action.payload, ...state.torrents],\r\n            };\r\n        case Action.UpdateTorrent:\r\n            return {\r\n                ...state,\r\n                isWaiting: false,\r\n                torrents: state.torrents.map(torrent =>{\r\n                    if(torrent._id === action.payload._id){\r\n                        return action.payload;\r\n                    }\r\n                    else{\r\n                        return torrent;\r\n                    }\r\n                })\r\n            };\r\n        case Action.EnterEditMode:\r\n            return {\r\n                ...state,\r\n                torrents: state.torrents.map(torrent =>{\r\n                    if(torrent._id === action.payload._id){\r\n                        return {...torrent, isEditing: true};\r\n                    }\r\n                    else{\r\n                        return torrent;\r\n                    }\r\n                })\r\n            };\r\n        case Action.LeaveEditMode:\r\n            return {\r\n                ...state,\r\n                torrents: state.torrents.map(torrent =>{\r\n                    if(torrent._id === action.payload._id){\r\n                        return {...torrent, isEditing: undefined};\r\n                    }\r\n                    else{\r\n                        return torrent;\r\n                    }\r\n                })\r\n            };\r\n        case Action.FinishDeletingTorrent:\r\n            return {\r\n                ...state,\r\n                isWaiting: false,\r\n                torrents: state.torrents.filter(torrent => torrent._id !==action.payload._id),\r\n            };\r\n        case Action.StartWaiting:\r\n            return {\r\n                ...state,\r\n                isWaiting: true,\r\n            };\r\n        default:\r\n    return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import {createStore, applyMiddleware} from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport reducer from './reducer';\r\n\r\n\r\nconst store = createStore(reducer, applyMiddleware(thunk));\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n//import * as serviceWorker from './serviceWorker';\nimport {Provider} from 'react-redux';\nimport store from './store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n//serviceWorker.unregister();\n"],"sourceRoot":""}